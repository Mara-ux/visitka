*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root{
    --dark: #0A0F15;
	--index: calc(1vw + 1vh);
	--transition: cubic-bezier(.1, .7, 0, 1);
}

@font-face {
    font-family: Monstress-reg;
    src: url(../fonts/MontserratAlternates-Regular.ttf);
}

body{
    font-family: Monstress-reg;
    width: 100%;
    height: 100%;
    color: white;
	background-image: linear-gradient(rgba(10, 15, 21, .9),rgba(10, 15, 21, .7)), url(../img/bg4.gif);
	background-size: cover;
}
.nav{
    padding: calc(var(--index));
    background-color: #0A0F15;
    text-align: right;
    font-size: calc(var(--index)*1.3);
    display: flex;
    justify-content: right;
}
.l1{
    margin-left: 2%;
    transition: .3s ease-in-out;
}
a{
    text-decoration: none;
    color: white;
    cursor: pointer;

}
a:hover{
    color: #EB18E2;
}


.section{
    padding: calc(var(--index)*2);
}
.tit-1{
    margin-bottom: calc(var(--index));
    font-size: calc(var(--index)*2);
    color: #EB18E2;
    text-align: center;
}

h1{
    font-size: calc(var(--index)*2);
}

.wrapper {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100vh;
}
.items {
	display: flex;
	gap: .4rem;
	perspective: calc(var(--index) * 35);
}
.item {
	background-color: #0A0F15;
	width: calc(var(--index) * 4);
	height: calc(var(--index) * 16);
	background-size: cover;
	background-position: center;
	cursor: pointer;
	transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
	will-change: transform, filter;
	filter: grayscale() brightness(.5);
}
.item::before, .item::after {
	content: '';
	position: absolute;
	width: 20px;
	height: 100%;
	right: calc(var(--index) * -1);
}
.item::after {
	left: calc(var(--index) * -1);
}
.items .item:hover {
	transform: translateZ(calc(var(--index) * 10));
	filter: inherit;
}

/* Right */

.items .item:hover + * {
	transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
	filter: inherit;
	z-index: -1;
}
.items .item:hover + * + * {
	transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
	filter: inherit;
	z-index: -2;
}
.items .item:hover + * + * + * {
	transform: translateZ(calc(var(--index) * 2.4)) rotateY(30deg);
	filter: inherit;
	z-index: -3;
}
.items .item:hover + * + * + * + * {
	transform: translateZ(calc(var(--index) * .6)) rotateY(14deg);
	filter: inherit;
	z-index: -4;
}

/* Left */

.item:has(+ :hover) {
	transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
	filter: inherit;
}
.item:has(+ * + :hover) {
	transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
	filter: inherit;
}
.item:has(+ * + * + :hover) {
	transform: translateZ(calc(var(--index) * 2.4)) rotateY(-30deg);
	filter: inherit;
}
.item:has(+ * + * + * + :hover) {
	transform: translateZ(calc(var(--index) * .6)) rotateY(-14deg);
	filter: inherit;
}

.items .item:active, .items .item:focus {
	width: 28vw;
	transform: translateZ(calc(var(--index) * 10));
	filter: inherit;
	z-index: 100;
	margin: 0 .45vw;
}
